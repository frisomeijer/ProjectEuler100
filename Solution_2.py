'''
Problem 2:
    
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
import time

start_time = time.time()

fib = [1,2]
fib_even=[2]
sum_fib_even=sum(fib_even)

while sum_fib_even<4000000:
    next_fib = fib[-2]+fib[-1]
    fib.append(next_fib)
    if next_fib%2==0:
        fib_even.append(next_fib)
        sum_fib_even=sum(fib_even)
    
print(sum_fib_even)

# calculation time: 0.0 seconds
print("calculation time: %s seconds" % (time.time() - start_time))      